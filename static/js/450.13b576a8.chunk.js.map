{"version":3,"file":"static/js/450.13b576a8.chunk.js","mappings":"mJACA,SAAgB,QAAU,0BCA1B,EAA6B,+BAA7B,EAAqE,2B,uBCGrE,MAAMA,EAAaC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAKC,EAAWC,OAAgBC,CAAS,EASzE,EARoBC,IAEZC,EAAAA,EAAAA,KAAA,OAAKC,UAAWJ,EAAkBK,UAC9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAO,CAACC,GAAI,YAAcL,EAAMM,GAAIJ,UAAWP,EAAWQ,SAAEH,EAAMO,SCP/E,EAAgC,qCAAhC,EAA6E,6BAA7E,EAAmH,8BCcnH,EAXuBP,IAEfQ,EAAAA,EAAAA,MAAA,OAAKN,UAAWJ,EAAqBK,SAAA,CAAEH,EAAMS,SACzCR,EAAAA,EAAAA,KAAA,OAAKC,UAAWJ,KAChBG,EAAAA,EAAAA,KAAA,OAAKC,UAAWJ,O,kCCH5B,MAAMY,GAAWC,E,OAAAA,GAAmB,YAC9BC,GAAeC,EAAAA,EAAAA,IAA0B,IAkB/C,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,sBAAhC,EAjB4Bf,IAGpBQ,EAAAA,EAAAA,MAAA,QAAMQ,SAAUhB,EAAMiB,aAAad,SAAA,EAC/BF,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACX,KAAK,qBACZY,UAAWT,EACXU,YAAY,iCACZC,SAAU,CAACC,EAAAA,GAAgBV,MAE3BX,EAAAA,EAAAA,KAAA,UAAQC,UAAU,MAAKC,SAAC,qBCepC,EAvBiBH,IACb,IAAIuB,EAAoBvB,EAAMwB,YAAYC,KAAKC,IAAWzB,EAAAA,EAAAA,KAAC0B,EAAU,CAAiBrB,GAAIoB,EAAOpB,GAAIC,KAAMmB,EAAOnB,MAAvCmB,EAAOpB,MAC9EsB,EAAqB5B,EAAM6B,aAAaJ,KAAKhB,IAAYR,EAAAA,EAAAA,KAAC6B,EAAa,CAAkBrB,QAASA,EAAQA,SAA7BA,EAAQH,MAQzF,OACIE,EAAAA,EAAAA,MAAA,OAAKN,UAAWJ,EAAOiC,QAAQ5B,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAWJ,EAAOkC,YAAY7B,SAC9BoB,KAELf,EAAAA,EAAAA,MAAA,OAAKN,UAAWJ,EAAOmC,eAAe9B,SAAA,EAClCF,EAAAA,EAAAA,KAAA,OAAAE,SAAMyB,KACN3B,EAAAA,EAAAA,KAACiC,EAAkB,CAAClB,SAZVmB,IAClBnC,EAAMoC,mBAAmBD,EAAME,oBAC/BC,QAAQC,IAAIJ,EAAME,mBAAmB,SAY/B,E,wBCDd,SAAeG,E,QAAAA,KACXC,EAAAA,EAAAA,UAjBmBC,IACZ,CACHlB,YAAakB,EAAMC,aAAanB,YAChCK,aAAca,EAAMC,aAAad,aACjCe,eAAgBF,EAAMC,aAAaC,mBAIjBC,IACf,CACHT,mBAAqBC,IACjBQ,GAASC,EAAAA,EAAAA,GAAmBT,GAAoB,MAOxDU,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://my-app/./src/components/Dialogs/DialogMessage/DialogMessage.module.css?5f22","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/DialogsMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__0ZyXW\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogItem\":\"DialogItem_dialogItem__Vh5U5\",\"active\":\"DialogItem_active__7JbvG\"};","import React from \"react\";\r\nimport styles from \"./DialogItem.module.css\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst activeLink = ({ isActive }) => isActive ? styles.active : undefined;\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={styles.dialogItem}>\r\n            <NavLink to={\"/dialogs/\" + props.id} className={activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogMessage\":\"DialogMessage_dialogMessage__cIWFt\",\"arrow\":\"DialogMessage_arrow__JJn+G\",\"arrow2\":\"DialogMessage_arrow2__SaAEc\"};","import React from \"react\";\r\nimport styles from \"./DialogMessage.module.css\"\r\n\r\n\r\nconst DialogMessage = (props) => {\r\n    return (\r\n        <div className={styles.dialogMessage}>{props.message}\r\n            <div className={styles.arrow2}></div>\r\n            <div className={styles.arrow}></div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DialogMessage; ","import React from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthValidatorCreator, reaquiredField } from \"../../utils/validators/validators\";\r\nimport { CustomFieldCreator } from \"../common/FormsControl/FormsControl\";\r\n\r\nconst Textarea = CustomFieldCreator(\"textarea\")\r\nconst maxLength10 = (maxLengthValidatorCreator(10));\r\nconst DialogsMessageForm = (props) => {\r\n    \r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"DialogsMessageText\" \r\n            component={Textarea} \r\n            placeholder=\"Please type your message here.\"\r\n            validate={[reaquiredField, maxLength10]}\r\n            />\r\n            <button className=\"btn\">Add message</button>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default reduxForm({form: \"DialogsMessageForm\"})(DialogsMessageForm);\r\n","import React, { Children } from \"react\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport DialogMessage from \"./DialogMessage/DialogMessage\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport DialogsMessageForm from \"./DialogsMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {    \r\n    let dialogsComponents = props.dialogsData.map((dialog) => <DialogItem key={dialog.id} id={dialog.id} name={dialog.name} />)\r\n    let messagesComponents = props.messagesData.map((message) => <DialogMessage key={message.id} message={message.message} />)\r\n\r\n\r\n    let customOnSubmit = (value) => {\r\n        props.onSendMessageClick(value.DialogsMessageText)\r\n        console.log(value.DialogsMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogItems}>\r\n                {dialogsComponents} \r\n            </div>\r\n            <div className={styles.dialogMessages}>\r\n                <div>{messagesComponents}</div>\r\n                <DialogsMessageForm onSubmit={customOnSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React, { Children } from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"../../../node_modules/react-redux/dist/react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {        \r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messagesData: state.messagesPage.messagesData,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: (DialogsMessageText) => {\r\n            dispatch(sendMessageCreator(DialogsMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n\r\n"],"names":["activeLink","_ref","isActive","styles","undefined","props","_jsx","className","children","NavLink","to","id","name","_jsxs","message","Textarea","CustomFieldCreator","maxLength10","maxLengthValidatorCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","reaquiredField","dialogsComponents","dialogsData","map","dialog","DialogItem","messagesComponents","messagesData","DialogMessage","dialogs","dialogItems","dialogMessages","DialogsMessageForm","value","onSendMessageClick","DialogsMessageText","console","log","compose","connect","state","messagesPage","newMessageText","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}